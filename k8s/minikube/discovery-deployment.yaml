kind: Deployment
apiVersion: apps/v1
metadata:
  name: discovery-demo
  namespace: ns-discovery
  labels:
    k8s-app: discovery-demo
spec:
  replicas: 1
  selector:
    matchLabels:
      k8s-app: discovery-demo # defines how deployment finds which Pods to manage
  template:
    metadata:
      name: discovery-demo
      labels:
        k8s-app: discovery-demo
        cluster-name: discovery-demo
    spec:
      containers:
        - name: discovery-demo
          image: 'qa.int.stratio.com:8443/stratio/discovery:0.40.0-PR252-SNAPSHOT'
          imagePullPolicy: IfNotPresent # (other values: Always, Never)
          resources:
            requests:
              cpu: '1'
              memory: 2Gi
            limits:
              cpu: '1'
              memory: 2Gi
          #command: ["/bin/bash"]
          #args: ["docker-entrypoint.sh"]
          envFrom:
            - configMapRef:
                name: discovery-config
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          securityContext:
            privileged: false
          ports:
            - name: discoveryapi
              containerPort: 443
              protocol: TCP
            - name: discoveryhealth
              containerPort: 3009
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /api/health
              port: discoveryhealth
              scheme: HTTP
            periodSeconds: 30
            timeoutSeconds: 15
            initialDelaySeconds: 30
            successThreshold: 1
            failureThreshold: 10 # TODO enable startupProbe & set failureThreshold to 3
          readinessProbe:
            httpGet:
              path: /api/health
              port: discoveryhealth
              scheme: HTTP
            periodSeconds: 15
            timeoutSeconds: 15
            initialDelaySeconds: 30
            successThreshold: 1
            failureThreshold: 10 # TODO enable startupProbe & set failureThreshold to 3
      restartPolicy: Always
      terminationGracePeriodSeconds: 30
      dnsPolicy: ClusterFirst
      securityContext: {}
      schedulerName: default-scheduler
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 0
      maxSurge: 1
  revisionHistoryLimit: 10
  progressDeadlineSeconds: 600
